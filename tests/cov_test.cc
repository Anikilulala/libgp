// libgp - Gaussian process library for Machine Learning
// Copyright (c) 2011, Manuel Blum <mblum@informatik.uni-freiburg.de>
// All rights reserved.

#include "cov_factory.h"

#include <Eigen/Dense>
#include <gtest/gtest.h>

const double tol = 10e-12;

libgp::CovFactory factory;
libgp::CovarianceFunction * covf;

TEST(CovTest, CovLinearard) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 5;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(5);
  x1.resize(5);
  x2.resize(5);
  p << 0.6815218764832496889, 0.3572433186076996448, 0.8016446005814280573, 0.5762582163031604310, 0.6802637953211223554;
  covf->set_loghyper(p);
  x1 << 0.5824272000341190747, 0.9090618075091982941, 0.8983665591786764715, 0.4563349605659706709, 0.1821682749491830844;
  x2 << 0.3278455504369928164, 0.0237893660331053303, 0.0071705314958446786, 0.8035318260802846169, 0.2425488725806864698;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 5);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(0.7279650715721992515, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.1878874143074322767, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.1878874143074322767, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.2468084296863074789, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.1736004764770063546, g11(0), tol);
  ASSERT_NEAR(-0.0977188973375458791, g12(0), tol);
  ASSERT_NEAR(-0.0977188973375458791, g21(0), tol);
  ASSERT_NEAR(-0.0550055108756029726, g22(0), tol);
  ASSERT_NEAR(-0.8089454114562052434, g11(1), tol);
  ASSERT_NEAR(-0.0211694060128446680, g12(1), tol);
  ASSERT_NEAR(-0.0211694060128446680, g21(1), tol);
  ASSERT_NEAR(-0.0005539851572060318, g22(1), tol);
  ASSERT_NEAR(-0.3248160625064392404, g11(2), tol);
  ASSERT_NEAR(-0.0025925985142279100, g12(2), tol);
  ASSERT_NEAR(-0.0025925985142279100, g21(2), tol);
  ASSERT_NEAR(-0.0000206934564876807, g22(2), tol);
  ASSERT_NEAR(-0.1315424579923240578, g11(3), tol);
  ASSERT_NEAR(-0.2316249260117356767, g12(3), tol);
  ASSERT_NEAR(-0.2316249260117356767, g21(3), tol);
  ASSERT_NEAR(-0.4078539140045010503, g22(3), tol);
  ASSERT_NEAR(-0.0170257347124235688, g11(4), tol);
  ASSERT_NEAR(-0.0226690007385103864, g12(4), tol);
  ASSERT_NEAR(-0.0226690007385103864, g21(4), tol);
  ASSERT_NEAR(-0.0301827558788172017, g22(4), tol);
  delete covf;
  param_dim = 4;
  input_dim = 4;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(4);
  x1.resize(4);
  x2.resize(4);
  p << 0.7989997507847768077, 0.2050294895562234654, 0.4917081063340573710, 0.8500468088967214619;
  covf->set_loghyper(p);
  x1 << 0.6256780714756307038, 0.2147821659154294238, 0.9727735044089815819, 0.5368852166949578120;
  x2 << 0.8346406141610824836, 0.8155536926815590837, 0.5548282090103082709, 0.4285280979253518474;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(0.5164027219505633592, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.4657861929269426771, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.4657861929269426771, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.7309978337154465766, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.1583906345021404982, g11(0), tol);
  ASSERT_NEAR(-0.2112895792343252310, g12(0), tol);
  ASSERT_NEAR(-0.2112895792343252310, g21(0), tol);
  ASSERT_NEAR(-0.2818555935036354265, g22(0), tol);
  ASSERT_NEAR(-0.0612265909568145833, g11(1), tol);
  ASSERT_NEAR(-0.2324847229857754938, g12(1), tol);
  ASSERT_NEAR(-0.2324847229857754938, g21(1), tol);
  ASSERT_NEAR(-0.8827724290561215215, g22(1), tol);
  ASSERT_NEAR(-0.7078825837279950628, g11(2), tol);
  ASSERT_NEAR(-0.4037458096250414741, g12(2), tol);
  ASSERT_NEAR(-0.4037458096250414741, g21(2), tol);
  ASSERT_NEAR(-0.2302792617545416642, g22(2), tol);
  ASSERT_NEAR(-0.1053056347141766852, g11(3), tol);
  ASSERT_NEAR(-0.0840522740087431552, g12(3), tol);
  ASSERT_NEAR(-0.0840522740087431552, g21(3), tol);
  ASSERT_NEAR(-0.0670883831165944994, g22(3), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.8026532743870726794, 0.9887645350599804095;
  covf->set_loghyper(p);
  x1 << 0.5083862230859420572, 0.1907993417646549617;
  x2 << 0.5411608558969316363, 0.2486949149764654532;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(0.0569440689671347061, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0618192457246102209, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0618192457246102209, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.0673740860545081338, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.1038106154238949697, g11(0), tol);
  ASSERT_NEAR(-0.1105030760923774308, g12(0), tol);
  ASSERT_NEAR(-0.1105030760923774308, g21(0), tol);
  ASSERT_NEAR(-0.1176269861807125033, g22(0), tol);
  ASSERT_NEAR(-0.0100775225103744374, g11(1), tol);
  ASSERT_NEAR(-0.0131354153568430127, g12(1), tol);
  ASSERT_NEAR(-0.0131354153568430127, g21(1), tol);
  ASSERT_NEAR(-0.0171211859283037678, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.2065966206175209319, 0.7857733890666483978;
  covf->set_loghyper(p);
  x1 << 0.4731725651039098146, 0.4729859251874395376;
  x2 << 0.7181920624459710023, 0.1280049180821326571;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(0.1945834850602438104, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.2373849686790243385, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.2373849686790243385, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.3446229601546617616, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.2962249009801308786, g11(0), tol);
  ASSERT_NEAR(-0.4496168803363612132, g12(0), tol);
  ASSERT_NEAR(-0.4496168803363612132, g21(0), tol);
  ASSERT_NEAR(-0.6824387092864999671, g22(0), tol);
  ASSERT_NEAR(-0.0929420691403567562, g11(1), tol);
  ASSERT_NEAR(-0.0251530570216874812, g12(1), tol);
  ASSERT_NEAR(-0.0251530570216874812, g21(1), tol);
  ASSERT_NEAR(-0.0068072110228235162, g22(1), tol);
  delete covf;
  param_dim = 5;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(5);
  x1.resize(5);
  x2.resize(5);
  p << 0.7348399302187170745, 0.6186380601088361519, 0.5616299800277974041, 0.2277626309757179168, 0.8850683659142194459;
  covf->set_loghyper(p);
  x1 << 0.5140319080990057854, 0.4186410673933532722, 0.7753044984118525607, 0.6972137735725106866, 0.9902753739942432576;
  x2 << 0.5929105076386768092, 0.1563341904473560806, 0.1307902916018933714, 0.1703569791712509218, 0.0660196279012246201;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 5);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(0.7823768924728924379, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.2085186260743318032, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.2085186260743318032, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.1126549797577624107, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.1215447763140927451, g11(0), tol);
  ASSERT_NEAR(-0.1401959175875477914, g12(0), tol);
  ASSERT_NEAR(-0.1401959175875477914, g21(0), tol);
  ASSERT_NEAR(-0.1617090911206487680, g22(0), tol);
  ASSERT_NEAR(-0.1017118285772945913, g11(1), tol);
  ASSERT_NEAR(-0.0379825048664207271, g12(1), tol);
  ASSERT_NEAR(-0.0379825048664207271, g21(1), tol);
  ASSERT_NEAR(-0.0141839026601644005, g22(1), tol);
  ASSERT_NEAR(-0.3909750113104707991, g11(2), tol);
  ASSERT_NEAR(-0.0659556804366508709, g12(2), tol);
  ASSERT_NEAR(-0.0659556804366508709, g21(2), tol);
  ASSERT_NEAR(-0.0111264189680070919, g22(2), tol);
  ASSERT_NEAR(-0.6164953485448861903, g11(3), tol);
  ASSERT_NEAR(-0.1506342663213489363, g12(3), tol);
  ASSERT_NEAR(-0.1506342663213489363, g21(3), tol);
  ASSERT_NEAR(-0.0368059260199251961, g22(3), tol);
  ASSERT_NEAR(-0.3340268201990407304, g11(4), tol);
  ASSERT_NEAR(-0.0222688829366952702, g12(4), tol);
  ASSERT_NEAR(-0.0222688829366952702, g21(4), tol);
  ASSERT_NEAR(-0.0014846207467793685, g22(4), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.7263588739721780208, 0.3891036357002028989;
  covf->set_loghyper(p);
  x1 << 0.0360160105651977647, 0.0056542274081602395;
  x2 << 0.6561612815017699996, 0.7526584193375264187;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(0.0003181294094417837, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0074827327163237397, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0074827327163237397, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.3608701138744164760, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.0006068954815231955, g11(0), tol);
  ASSERT_NEAR(-0.0110567858750767554, g12(0), tol);
  ASSERT_NEAR(-0.0110567858750767554, g21(0), tol);
  ASSERT_NEAR(-0.2014391565092322200, g22(0), tol);
  ASSERT_NEAR(-0.0000293633373603719, g11(1), tol);
  ASSERT_NEAR(-0.0039086795575707239, g12(1), tol);
  ASSERT_NEAR(-0.0039086795575707239, g21(1), tol);
  ASSERT_NEAR(-0.5203010712396006765, g22(1), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.3392711746582338650;
  covf->set_loghyper(p);
  x1 << 0.4973919071748561516;
  x2 << 0.3118238773187292923;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(0.1255192199256570385, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0786902425846691678, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0786902425846691678, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.0493323196375948861, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.2510384398513140769, g11(0), tol);
  ASSERT_NEAR(-0.1573804851693383355, g12(0), tol);
  ASSERT_NEAR(-0.1573804851693383355, g21(0), tol);
  ASSERT_NEAR(-0.0986646392751897722, g22(0), tol);
  delete covf;
  param_dim = 4;
  input_dim = 4;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(4);
  x1.resize(4);
  x2.resize(4);
  p << 0.8083914964777256795, 0.6769050681603145936, 0.9307232080353367021, 0.6389176373119850316;
  covf->set_loghyper(p);
  x1 << 0.5729121124237374074, 0.9906773853117780693, 0.0545516736108403455, 0.0850607905607034809;
  x2 << 0.9612506364666427716, 0.4054315937741339582, 0.6852799016740164229, 0.4060407269707669853;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(0.3211055310789908690, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.2284995855626191230, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.2284995855626191230, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.3448372872086528096, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.1303305030828562638, g11(0), tol);
  ASSERT_NEAR(-0.2186727707840003254, g12(0), tol);
  ASSERT_NEAR(-0.2186727707840003254, g21(0), tol);
  ASSERT_NEAR(-0.3668963101596583454, g22(0), tol);
  ASSERT_NEAR(-0.5069232638260542378, g11(1), tol);
  ASSERT_NEAR(-0.2074567460823812937, g12(1), tol);
  ASSERT_NEAR(-0.2074567460823812937, g21(1), tol);
  ASSERT_NEAR(-0.0849010186872342781, g22(1), tol);
  ASSERT_NEAR(-0.0009251885445834318, g11(2), tol);
  ASSERT_NEAR(-0.0116222486478594726, g12(2), tol);
  ASSERT_NEAR(-0.0116222486478594726, g21(2), tol);
  ASSERT_NEAR(-0.1459990662697730479, g22(2), tol);
  ASSERT_NEAR(-0.0040321067044878159, g11(3), tol);
  ASSERT_NEAR(-0.0192474056109971370, g12(3), tol);
  ASSERT_NEAR(-0.0192474056109971370, g21(3), tol);
  ASSERT_NEAR(-0.0918781793006399478, g22(3), tol);
  delete covf;
  param_dim = 5;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(5);
  x1.resize(5);
  x2.resize(5);
  p << 0.8378921775123239213, 0.2459922896738701015, 0.4164766934676998877, 0.3699770113013072237, 0.7918011269028125687;
  covf->set_loghyper(p);
  x1 << 0.0321086712428561016, 0.7964762260988786924, 0.0340560200474812058, 0.0184653089218791422, 0.4474508235244137877;
  x2 << 0.8375159405605541174, 0.7959982972794927836, 0.9368689694719486427, 0.2013122578744009905, 0.8626805867988521781;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 5);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(0.4298143165598117266, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.4875314829758978785, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.4875314829758978785, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.0723576041529869762, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.0003859142047224779, g11(0), tol);
  ASSERT_NEAR(-0.0100661063081436478, g12(0), tol);
  ASSERT_NEAR(-0.0100661063081436478, g21(0), tol);
  ASSERT_NEAR(-0.2625622352504908275, g22(0), tol);
  ASSERT_NEAR(-0.7757279541098680564, g11(1), tol);
  ASSERT_NEAR(-0.7752624753760101184, g12(1), tol);
  ASSERT_NEAR(-0.7752624753760101184, g21(1), tol);
  ASSERT_NEAR(-0.7747972759545717070, g22(1), tol);
  ASSERT_NEAR(-0.0010084879692780243, g11(2), tol);
  ASSERT_NEAR(-0.0277431444773958633, g12(2), tol);
  ASSERT_NEAR(-0.0277431444773958633, g21(2), tol);
  ASSERT_NEAR(-0.7632040132761079843, g22(2), tol);
  ASSERT_NEAR(-0.0003253757650339445, g11(3), tol);
  ASSERT_NEAR(-0.0035473075589318682, g12(3), tol);
  ASSERT_NEAR(-0.0035473075589318682, g21(3), tol);
  ASSERT_NEAR(-0.0386734116978331779, g22(3), tol);
  ASSERT_NEAR(-0.0821809010707209575, g11(4), tol);
  ASSERT_NEAR(-0.1584439322313142828, g12(4), tol);
  ASSERT_NEAR(-0.1584439322313142828, g21(4), tol);
  ASSERT_NEAR(-0.3054782721269701518, g22(4), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovLinearard");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.0596814152258667852, 0.9686799519430016048;
  covf->set_loghyper(p);
  x1 << 0.0655055295440604146, 0.2295410398762302018;
  x2 << 0.0330783997679383601, 0.1278220342271251253;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(0.0113998250120189142, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0061504981269993207, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0061504981269993207, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.0033251795150077606, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.0076163571441899081, g11(0), tol);
  ASSERT_NEAR(-0.0038460402983453330, g12(0), tol);
  ASSERT_NEAR(-0.0038460402983453330, g21(0), tol);
  ASSERT_NEAR(-0.0019421392269899349, g22(0), tol);
  ASSERT_NEAR(-0.0151832928798479195, g11(1), tol);
  ASSERT_NEAR(-0.0084549559556533083, g12(1), tol);
  ASSERT_NEAR(-0.0084549559556533083, g21(1), tol);
  ASSERT_NEAR(-0.0047082198030255857, g22(1), tol);
  delete covf;
}
TEST(CovTest, CovLinearone) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 1;
  input_dim = 4;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(4);
  x2.resize(4);
  p << 0.0282963178771346024;
  covf->set_loghyper(p);
  x1 << 0.8519037285637555135, 0.2822218636677497061, 0.4219899504716696503, 0.6533128362289228885;
  x2 << 0.9215951315675739997, 0.2923504245084196373, 0.9668009558907424417, 0.7794145135445746941;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(2.2776660388879261809, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.6315771717312248512, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.6315771717312248512, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.2856893508624889222, covf->get(x2, x2), tol);
  ASSERT_NEAR(-4.5553320777758523619, g11(0), tol);
  ASSERT_NEAR(-5.2631543434624497024, g12(0), tol);
  ASSERT_NEAR(-5.2631543434624497024, g21(0), tol);
  ASSERT_NEAR(-6.5713787017249778444, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.1788917322096805762;
  covf->set_loghyper(p);
  x1 << 0.1903037228171132744;
  x2 << 0.0991795740395213787;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(0.7245472340617413742, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.7124217974836122291, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.7124217974836122291, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.7061024485131361939, covf->get(x2, x2), tol);
  ASSERT_NEAR(-1.4490944681234827485, g11(0), tol);
  ASSERT_NEAR(-1.4248435949672244583, g12(0), tol);
  ASSERT_NEAR(-1.4248435949672244583, g21(0), tol);
  ASSERT_NEAR(-1.4122048970262723877, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(5);
  x2.resize(5);
  p << 0.0484247250336240498;
  covf->set_loghyper(p);
  x1 << 0.9100236817798876832, 0.1220424920025925397, 0.3536633116908652896, 0.2317714473775457362, 0.5607245029431578986;
  x2 << 0.5733089891154338202, 0.3027688103466606995, 0.7734485425157876515, 0.0138646485442279754, 0.2671613966059468437;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(2.1205925771378058009, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.8019815467428306199, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.8019815467428306199, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.8972067443956941446, covf->get(x2, x2), tol);
  ASSERT_NEAR(-4.2411851542756116018, g11(0), tol);
  ASSERT_NEAR(-3.6039630934856612399, g12(0), tol);
  ASSERT_NEAR(-3.6039630934856612399, g21(0), tol);
  ASSERT_NEAR(-3.7944134887913882892, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(5);
  x2.resize(5);
  p << 0.8383057073382846891;
  covf->set_loghyper(p);
  x1 << 0.0228831339075434848, 0.9656068351752192802, 0.3979126151546246160, 0.5152288780705603921, 0.7316551596936448076;
  x2 << 0.5532306175342271981, 0.9832424213842059224, 0.5343535035759229279, 0.6413110720342660720, 0.3366254579044853923;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(0.5408295545609874688, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.5145349829222378713, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.5145349829222378713, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.5765338470106158297, covf->get(x2, x2), tol);
  ASSERT_NEAR(-1.0816591091219749377, g11(0), tol);
  ASSERT_NEAR(-1.0290699658444757425, g12(0), tol);
  ASSERT_NEAR(-1.0290699658444757425, g21(0), tol);
  ASSERT_NEAR(-1.1530676940212316595, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 5;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(5);
  x2.resize(5);
  p << 0.8860312519193069836;
  covf->set_loghyper(p);
  x1 << 0.1067096267191162129, 0.6203188191397699391, 0.8711246706237404380, 0.5888281835327624503, 0.7655900961701020968;
  x2 << 0.7477877642901546995, 0.1262513266372961018, 0.6367399227273612405, 0.9035674117293727159, 0.3337559430506309432;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(0.5248853944503132363, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.4250159980411646887, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.4250159980411646887, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.4943741906270128772, covf->get(x2, x2), tol);
  ASSERT_NEAR(-1.0497707889006264725, g11(0), tol);
  ASSERT_NEAR(-0.8500319960823293775, g12(0), tol);
  ASSERT_NEAR(-0.8500319960823293775, g21(0), tol);
  ASSERT_NEAR(-0.9887483812540257544, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 3;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(3);
  x2.resize(3);
  p << 0.2253839333764924291;
  covf->set_loghyper(p);
  x1 << 0.7640113315856916776, 0.4047918516290269775, 0.9601080326237392271;
  x2 << 0.6123945248609492520, 0.3535834716177134185, 0.2084628964083938829;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.7007635837320855821, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.1539544191918980065, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.1539544191918980065, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.9834268761029193451, covf->get(x2, x2), tol);
  ASSERT_NEAR(-3.4015271674641711641, g11(0), tol);
  ASSERT_NEAR(-2.3079088383837960130, g12(0), tol);
  ASSERT_NEAR(-2.3079088383837960130, g21(0), tol);
  ASSERT_NEAR(-1.9668537522058386902, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.5852910754713444019;
  covf->set_loghyper(p);
  x1 << 0.2637595204011166095;
  x2 << 0.5837172822195197952;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(0.3317656913216026626, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.3579429054676468436, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.3579429054676468436, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.4158748135715509830, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.6635313826432053252, g11(0), tol);
  ASSERT_NEAR(-0.7158858109352936872, g12(0), tol);
  ASSERT_NEAR(-0.7158858109352936872, g21(0), tol);
  ASSERT_NEAR(-0.8317496271431019661, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.8965142383553320604;
  covf->set_loghyper(p);
  x1 << 0.1752709762221511536;
  x2 << 0.7209398460427725031;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(0.1715687922325894732, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.1874885630183931451, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.1874885630183931451, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.2529711508759884264, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.3431375844651789464, g11(0), tol);
  ASSERT_NEAR(-0.3749771260367862902, g12(0), tol);
  ASSERT_NEAR(-0.3749771260367862902, g21(0), tol);
  ASSERT_NEAR(-0.5059423017519768528, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.4767907297765190400;
  covf->set_loghyper(p);
  x1 << 0.7426966718982130899;
  x2 << 0.5335508972943534545;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(0.5979214616577747110, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.5380630199370869393, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.5380630199370869393, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.4950609081744375972, covf->get(x2, x2), tol);
  ASSERT_NEAR(-1.1958429233155494220, g11(0), tol);
  ASSERT_NEAR(-1.0761260398741738786, g12(0), tol);
  ASSERT_NEAR(-1.0761260398741738786, g21(0), tol);
  ASSERT_NEAR(-0.9901218163488751944, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 4;
  covf = factory.create(input_dim, "CovLinearone");
  p.resize(1);
  x1.resize(4);
  x2.resize(4);
  p << 0.9574030593156547253;
  covf->set_loghyper(p);
  x1 << 0.2430356751381408387, 0.6288385960173749067, 0.7461479142511228124, 0.8525282855791138648;
  x2 << 0.6708571960825423508, 0.9687764045179049210, 0.0028656523543231227, 0.0799642071199024862;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(0.4035068675690431372, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.2715382445079151386, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.2715382445079151386, covf->get(x1, x2), tol);
  ASSERT_NEAR(0.3529491048108194806, covf->get(x2, x2), tol);
  ASSERT_NEAR(-0.8070137351380862745, g11(0), tol);
  ASSERT_NEAR(-0.5430764890158302771, g12(0), tol);
  ASSERT_NEAR(-0.5430764890158302771, g21(0), tol);
  ASSERT_NEAR(-0.7058982096216389612, g22(0), tol);
  delete covf;
}
TEST(CovTest, CovMatern3iso) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.3374053121851872117, 0.6070000666934416422;
  covf->set_loghyper(p);
  x1 << 0.1244338501900541516, 0.5816143529680047886, 0.8680035940085804036;
  x2 << 0.1306995332226419393, 0.3637043411543985361, 0.0890565282853078566;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(3.3669259039464649597, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.4775021958109042508, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.4775021958109042508, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.3669259039464649597, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.2383662376473476563, g12(0), tol);
  ASSERT_NEAR(1.2383662376473476563, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(6.7338518078929299193, g11(1), tol);
  ASSERT_NEAR(4.9550043916218085016, g12(1), tol);
  ASSERT_NEAR(4.9550043916218085016, g21(1), tol);
  ASSERT_NEAR(6.7338518078929299193, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 1;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(1);
  x2.resize(1);
  p << 0.6127019181435851003, 0.9266016147030956551;
  covf->set_loghyper(p);
  x1 << 0.7382075408277225526;
  x2 << 0.0052467065294070636;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(6.3802241464131022042, covf->get(x1, x1), tol);
  ASSERT_NEAR(5.4128378858440946431, covf->get(x2, x1), tol);
  ASSERT_NEAR(5.4128378858440946431, covf->get(x1, x2), tol);
  ASSERT_NEAR(6.3802241464131022042, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.5176289109599214733, g12(0), tol);
  ASSERT_NEAR(1.5176289109599214733, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(12.7604482928262044084, g11(1), tol);
  ASSERT_NEAR(10.8256757716881892861, g12(1), tol);
  ASSERT_NEAR(10.8256757716881892861, g21(1), tol);
  ASSERT_NEAR(12.7604482928262044084, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.5529253399292969329, 0.3606483325493556880;
  covf->set_loghyper(p);
  x1 << 0.0250715276881056104, 0.6721164572807746262, 0.6773629578384273708;
  x2 << 0.3784750018234998015, 0.4344423389244718159, 0.5329489577170217762;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(2.0570988503332512387, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.9030422356252383320, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.9030422356252381100, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.0570988503332512387, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2638605909570748143, g12(0), tol);
  ASSERT_NEAR(0.2638605909570748698, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.1141977006665024774, g11(1), tol);
  ASSERT_NEAR(3.8060844712504762200, g12(1), tol);
  ASSERT_NEAR(3.8060844712504766640, g21(1), tol);
  ASSERT_NEAR(4.1141977006665024774, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 1;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(1);
  x2.resize(1);
  p << 0.2314135085318993479, 0.4260722078570128302;
  covf->set_loghyper(p);
  x1 << 0.1427829199430397100;
  x2 << 0.9881245898522545978;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(2.3446694107028203113, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.5862032031113777464, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.5862032031113777464, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.3446694107028203113, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.9902558983780734847, g12(0), tol);
  ASSERT_NEAR(0.9902558983780734847, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.6893388214056406227, g11(1), tol);
  ASSERT_NEAR(3.1724064062227554928, g12(1), tol);
  ASSERT_NEAR(3.1724064062227554928, g21(1), tol);
  ASSERT_NEAR(4.6893388214056406227, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.9280705010215859474, 0.8724680167400656883;
  covf->set_loghyper(p);
  x1 << 0.3946044044074398238, 0.3770147957190641552, 0.0257393599359304615, 0.7747444147844011475, 0.3521946859446715150;
  x2 << 0.1980641061872282505, 0.6893760904824627334, 0.2120432173597970316, 0.1114898099551303590, 0.9424695647505655360;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(5.7255352211449430655, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.8915840298649362339, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.8915840298649362339, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.7255352211449430655, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.3167735240871263347, g12(0), tol);
  ASSERT_NEAR(1.3167735240871263347, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(11.4510704422898861310, g11(1), tol);
  ASSERT_NEAR(9.7831680597298724678, g12(1), tol);
  ASSERT_NEAR(9.7831680597298724678, g21(1), tol);
  ASSERT_NEAR(11.4510704422898861310, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.8627786425129918557, 0.1258744663747423109;
  covf->set_loghyper(p);
  x1 << 0.2294911376852513119, 0.8443907870773726954, 0.8068253351946642615, 0.2764737646254764591, 0.3112377559208223676;
  x2 << 0.3806037789944926031, 0.4184766313358646572, 0.0659325962209559302, 0.9471493797339729515, 0.7902568770859531577;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(1.2862730557019810274, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.0054773296331831478, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.0054773296331831478, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.2862730557019810274, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4104083459241532617, g12(0), tol);
  ASSERT_NEAR(0.4104083459241532617, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.5725461114039620547, g11(1), tol);
  ASSERT_NEAR(2.0109546592663662956, g12(1), tol);
  ASSERT_NEAR(2.0109546592663662956, g21(1), tol);
  ASSERT_NEAR(2.5725461114039620547, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.9752803783090180367, 0.1307446982766575783;
  covf->set_loghyper(p);
  x1 << 0.5158360264261185879, 0.5318222309550887372, 0.1318691635968962661, 0.6441326801335349739;
  x2 << 0.4073073955854112915, 0.6917214243507597837, 0.6952685686537860565, 0.3017600584682702536;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(1.2988631690725327417, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.2013585035290521574, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.2013585035290523795, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.2988631690725327417, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1669637277843706580, g12(0), tol);
  ASSERT_NEAR(0.1669637277843705747, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.5977263381450654833, g11(1), tol);
  ASSERT_NEAR(2.4027170070581047590, g12(1), tol);
  ASSERT_NEAR(2.4027170070581043149, g21(1), tol);
  ASSERT_NEAR(2.5977263381450654833, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.7704581379455291978, 0.9868683082392186723;
  covf->set_loghyper(p);
  x1 << 0.6121748909258076798, 0.3656379613057118005, 0.1507394967877130343, 0.9757003566756664581, 0.7062636374804240891;
  x2 << 0.7665856531893810999, 0.1773620437742179368, 0.2405183334982418097, 0.9044883265847847298, 0.7337983810599446599;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(7.1975206782618208479, covf->get(x1, x1), tol);
  ASSERT_NEAR(7.0508832530056784194, covf->get(x2, x1), tol);
  ASSERT_NEAR(7.0508832530056784194, covf->get(x1, x2), tol);
  ASSERT_NEAR(7.1975206782618208479, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2724648636289002668, g12(0), tol);
  ASSERT_NEAR(0.2724648636289002668, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(14.3950413565236416957, g11(1), tol);
  ASSERT_NEAR(14.1017665060113568387, g12(1), tol);
  ASSERT_NEAR(14.1017665060113568387, g21(1), tol);
  ASSERT_NEAR(14.3950413565236416957, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.2677347561812279952, 0.8518247253724742230;
  covf->set_loghyper(p);
  x1 << 0.8283383552263101635, 0.8795495418985587177, 0.0537511553050095126, 0.2510304127186027134, 0.8537698373639274196;
  x2 << 0.9529423365088776077, 0.1315881970559036329, 0.3008788426863636678, 0.0519092747961227285, 0.5464416129341410633;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(5.4939607898567537347, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.7141810867870961310, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.7141810867870961310, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.4939607898567537347, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(2.3224863229187846514, g12(0), tol);
  ASSERT_NEAR(2.3224863229187846514, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(10.9879215797135074695, g11(1), tol);
  ASSERT_NEAR(7.4283621735741922620, g12(1), tol);
  ASSERT_NEAR(7.4283621735741922620, g21(1), tol);
  ASSERT_NEAR(10.9879215797135074695, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovMatern3iso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.1967710053714581964, 0.2046364506858953103;
  covf->set_loghyper(p);
  x1 << 0.0901499183790864800, 0.0045209350918883340, 0.1871259722056461960;
  x2 << 0.6513500774994925857, 0.5957241078750042940, 0.9422880138203966194;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.5057225781783167839, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.7997472651892807427, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.7997472651892807427, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.5057225781783167839, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.7744120249602733930, g12(0), tol);
  ASSERT_NEAR(0.7744120249602733930, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(3.0114451563566335679, g11(1), tol);
  ASSERT_NEAR(1.5994945303785614854, g12(1), tol);
  ASSERT_NEAR(1.5994945303785614854, g21(1), tol);
  ASSERT_NEAR(3.0114451563566335679, g22(1), tol);
  delete covf;
}
TEST(CovTest, CovMatern5iso) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.4491750402081234883, 0.3768231001850685935;
  covf->set_loghyper(p);
  x1 << 0.0087900788508387118, 0.2166859675878393121, 0.4431923217502655721, 0.3393682409778010500;
  x2 << 0.1401406370415229086, 0.0884111464949592918, 0.0037311169664645538, 0.7976653534957058866;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(2.1247331124978874328, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.8530204825838636484, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.8530204825838636484, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.1247331124978874328, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4767112589129867128, g12(0), tol);
  ASSERT_NEAR(0.4767112589129867128, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.2494662249957748656, g11(1), tol);
  ASSERT_NEAR(3.7060409651677272969, g12(1), tol);
  ASSERT_NEAR(3.7060409651677272969, g21(1), tol);
  ASSERT_NEAR(4.2494662249957748656, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.7113523566054203995, 0.4434972411167381612;
  covf->set_loghyper(p);
  x1 << 0.2960890336987223037, 0.2620622278389004300;
  x2 << 0.2752419101841000471, 0.0737013140896306540;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(2.4278218132786806294, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.4104757665569946923, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.4104757665569946923, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.4278218132786806294, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0343709232812042867, g12(0), tol);
  ASSERT_NEAR(0.0343709232812042867, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.8556436265573612587, g11(1), tol);
  ASSERT_NEAR(4.8209515331139893846, g12(1), tol);
  ASSERT_NEAR(4.8209515331139893846, g21(1), tol);
  ASSERT_NEAR(4.8556436265573612587, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.3004247910259543186, 0.0503365765810105392;
  covf->set_loghyper(p);
  x1 << 0.3360915503520292003, 0.8623640843417248458, 0.1518612231310307870, 0.3095457709354388909;
  x2 << 0.5308711491339822564, 0.5393228398428538961, 0.7944978378751047510, 0.0607676848405296344;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(1.1059151178258295189, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.8627571063903988202, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.8627571063903988202, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.1059151178258295189, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3908175243830975809, g12(0), tol);
  ASSERT_NEAR(0.3908175243830975809, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.2118302356516590379, g11(1), tol);
  ASSERT_NEAR(1.7255142127807976404, g12(1), tol);
  ASSERT_NEAR(1.7255142127807976404, g21(1), tol);
  ASSERT_NEAR(2.2118302356516590379, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.9310393302471705601, 0.7592592032480798281;
  covf->set_loghyper(p);
  x1 << 0.1183555968511411649, 0.1259642284333162277, 0.3000016011957458151, 0.3766879634176362179, 0.6562175465037791700;
  x2 << 0.8466837360685197655, 0.7785085633772164115, 0.6988300748863086609, 0.4787288997930638779, 0.3921816876365356030;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(4.5654560318074128844, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.9592686170347652919, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.9592686170347652919, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.5654560318074128844, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.0586232686700050021, g12(0), tol);
  ASSERT_NEAR(1.0586232686700050021, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(9.1309120636148257688, g11(1), tol);
  ASSERT_NEAR(7.9185372340695305837, g12(1), tol);
  ASSERT_NEAR(7.9185372340695305837, g21(1), tol);
  ASSERT_NEAR(9.1309120636148257688, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.5950280567010178823, 0.0596209114253972716;
  covf->set_loghyper(p);
  x1 << 0.9192103603083385810, 0.4825808591267773950, 0.0735834521861951085;
  x2 << 0.3428052269892088999, 0.5407158149129469571, 0.6050880460028873475;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.1266423332097914578, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.9754211958754782641, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.9754211958754782641, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.1266423332097914578, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2637262183721294506, g12(0), tol);
  ASSERT_NEAR(0.2637262183721294506, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.2532846664195829156, g11(1), tol);
  ASSERT_NEAR(1.9508423917509565282, g12(1), tol);
  ASSERT_NEAR(1.9508423917509565282, g21(1), tol);
  ASSERT_NEAR(2.2532846664195829156, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.6614821050352027720, 0.6557134977630032502;
  covf->set_loghyper(p);
  x1 << 0.5778200510957089975, 0.2874458297093821502, 0.7773198015660218729, 0.5216441175719326306;
  x2 << 0.4706043183534478480, 0.1236027218670684436, 0.8418527043659751463, 0.1553516332449716986;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(3.7114661807825175543, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.5725739270500267430, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.5725739270500267430, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.7114661807825175543, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2661321482567787777, g12(0), tol);
  ASSERT_NEAR(0.2661321482567787777, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(7.4229323615650351087, g11(1), tol);
  ASSERT_NEAR(7.1451478541000534861, g12(1), tol);
  ASSERT_NEAR(7.1451478541000534861, g21(1), tol);
  ASSERT_NEAR(7.4229323615650351087, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.0480175572098604508, 0.7635901646454804625;
  covf->set_loghyper(p);
  x1 << 0.3505081563156227098, 0.4598811064587275954, 0.0485355742638932108, 0.2933038278815671696;
  x2 << 0.7453463875900536717, 0.9260286162556375933, 0.7526511952631986802, 0.1452132680940797504;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(4.6051734256484442298, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.6862480554111347608, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.6862480554111347608, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.6051734256484442298, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(2.5025412303179384033, g12(0), tol);
  ASSERT_NEAR(2.5025412303179384033, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(9.2103468512968884596, g11(1), tol);
  ASSERT_NEAR(5.3724961108222695216, g12(1), tol);
  ASSERT_NEAR(5.3724961108222695216, g21(1), tol);
  ASSERT_NEAR(9.2103468512968884596, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 2;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(2);
  x2.resize(2);
  p << 0.8937504443409027832, 0.1417697830702163708;
  covf->set_loghyper(p);
  x1 << 0.8511883315801247463, 0.4775345130947962202;
  x2 << 0.9260002112508013417, 0.5414094402626952185;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(1.3278214160431542901, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.3260326628184353481, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.3260326628184353481, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.3278214160431542901, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0035707527536084018, g12(0), tol);
  ASSERT_NEAR(0.0035707527536084018, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.6556428320863085801, g11(1), tol);
  ASSERT_NEAR(2.6520653256368706963, g12(1), tol);
  ASSERT_NEAR(2.6520653256368706963, g21(1), tol);
  ASSERT_NEAR(2.6556428320863085801, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.8420755783482734014, 0.1796457371131514602;
  covf->set_loghyper(p);
  x1 << 0.2761691455143425733, 0.1563085305762564881, 0.7841087358459110090;
  x2 << 0.6135862446503070888, 0.6310531329434437842, 0.7313029456424896546;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.4323142234149415231, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.3610317748513058866, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.3610317748513058866, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.4323142234149415231, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1348695699506713974, g12(0), tol);
  ASSERT_NEAR(0.1348695699506713974, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.8646284468298830461, g11(1), tol);
  ASSERT_NEAR(2.7220635497026117733, g12(1), tol);
  ASSERT_NEAR(2.7220635497026117733, g21(1), tol);
  ASSERT_NEAR(2.8646284468298830461, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 1;
  covf = factory.create(input_dim, "CovMatern5iso");
  p.resize(2);
  x1.resize(1);
  x2.resize(1);
  p << 0.9739763772724667756, 0.1244672826601631588;
  covf->set_loghyper(p);
  x1 << 0.9017129769407049578;
  x2 << 0.0792069274493013564;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(1.2826581000018699719, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.1882506771764931308, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.1882506771764931308, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.2826581000018699719, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1744569881575450399, g12(0), tol);
  ASSERT_NEAR(0.1744569881575450399, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.5653162000037399437, g11(1), tol);
  ASSERT_NEAR(2.3765013543529862616, g12(1), tol);
  ASSERT_NEAR(2.3765013543529862616, g21(1), tol);
  ASSERT_NEAR(2.5653162000037399437, g22(1), tol);
  delete covf;
}
TEST(CovTest, CovRQiso) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 3;
  input_dim = 5;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(5);
  x2.resize(5);
  p << 0.6048601887547823130, 0.8475502625616972985, 0.7151780688782096718;
  covf->set_loghyper(p);
  x1 << 0.9598844753237223415, 0.1936227395074813229, 0.0751440053888786652, 0.0841323276998058311, 0.9610594720634569876;
  x2 << 0.9652413376879727114, 0.9322819422655873600, 0.6869068400880516956, 0.1382932468824195071, 0.6477497445354585270;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(5.4471935174914563049, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.7031498321011140362, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.7031498321011140362, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.4471935174914563049, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.3330333559927931564, g12(0), tol);
  ASSERT_NEAR(1.3330333559927933784, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(10.8943870349829126098, g11(1), tol);
  ASSERT_NEAR(9.4062996642022280724, g12(1), tol);
  ASSERT_NEAR(9.4062996642022280724, g21(1), tol);
  ASSERT_NEAR(10.8943870349829126098, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0242258317605216870, g12(2), tol);
  ASSERT_NEAR(-0.0242258317605215552, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.7035028134150601575, 0.2247088865482667064, 0.9955998278960489500;
  covf->set_loghyper(p);
  x1 << 0.1013851799999687664, 0.8181123310417748318, 0.6858411180138777041;
  x2 << 0.3951698868463435765, 0.8914017677273716744, 0.3822628682080658757;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.5673993377107970915, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.5326554897508608555, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.5326554897508608555, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.5673993377107970915, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0684280135619402818, g12(0), tol);
  ASSERT_NEAR(0.0684280135619402818, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(3.1347986754215941829, g11(1), tol);
  ASSERT_NEAR(3.0653109795017217110, g12(1), tol);
  ASSERT_NEAR(3.0653109795017217110, g21(1), tol);
  ASSERT_NEAR(3.1347986754215941829, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0001418881939699694, g12(2), tol);
  ASSERT_NEAR(-0.0001418881939699694, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.8723850768901011410, 0.8850293741568989736, 0.2077879153879910179;
  covf->set_loghyper(p);
  x1 << 0.7958426228441645156, 0.6914299670906748352, 0.6201762693812091776;
  x2 << 0.4047173631399426652, 0.1460610454874977648, 0.0464976987309360101;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(5.8711982742495631982, covf->get(x1, x1), tol);
  ASSERT_NEAR(5.4947345755091845376, covf->get(x2, x1), tol);
  ASSERT_NEAR(5.4947345755091845376, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.8711982742495631982, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.7089994790987277362, g12(0), tol);
  ASSERT_NEAR(0.7089994790987277362, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(11.7423965484991263963, g11(1), tol);
  ASSERT_NEAR(10.9894691510183690752, g12(1), tol);
  ASSERT_NEAR(10.9894691510183690752, g21(1), tol);
  ASSERT_NEAR(11.7423965484991263963, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0096278837964718644, g12(2), tol);
  ASSERT_NEAR(-0.0096278837964718644, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.1729790878858681324, 0.2601386002435396305, 0.9566734824479430355;
  covf->set_loghyper(p);
  x1 << 0.6089245324420434757, 0.6085587979596116526;
  x2 << 0.2505793860836273979, 0.7850013028656007696;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(1.6824939732122301539, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.5911207625362406848, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.5911207625362406848, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.6824939732122301539, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1757994385572646256, g12(0), tol);
  ASSERT_NEAR(0.1757994385572645979, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(3.3649879464244603078, g11(1), tol);
  ASSERT_NEAR(3.1822415250724813696, g12(1), tol);
  ASSERT_NEAR(3.1822415250724813696, g21(1), tol);
  ASSERT_NEAR(3.3649879464244603078, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0009461577231261880, g12(2), tol);
  ASSERT_NEAR(-0.0009461577231261991, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.1234734888118446117, 0.6435969380163988340, 0.9014917678865391748;
  covf->set_loghyper(p);
  x1 << 0.3852669495771569030;
  x2 << 0.7673158909914865600;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(3.6226067958450092199, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.4240785613940047938, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.4240785613940047938, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.6226067958450092199, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3815900547702379964, g12(0), tol);
  ASSERT_NEAR(0.3815900547702379964, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(7.2452135916900184398, g11(1), tol);
  ASSERT_NEAR(6.8481571227880095876, g12(1), tol);
  ASSERT_NEAR(6.8481571227880095876, g21(1), tol);
  ASSERT_NEAR(7.2452135916900184398, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0021910863453788372, g12(2), tol);
  ASSERT_NEAR(-0.0021910863453788372, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 5;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(5);
  x2.resize(5);
  p << 0.0759655243970787097, 0.3526150798002912756, 0.9639960519677613915;
  covf->set_loghyper(p);
  x1 << 0.5607348917896426421, 0.8495552953425065112, 0.8517810629506780140, 0.7238758994213309039, 0.9459341547822451846;
  x2 << 0.6966862399580248111, 0.0672111882455044274, 0.2900573040749109266, 0.1971852712005575103, 0.1573806729377318359;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(2.0243125462761648592, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.0127761647021062963, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.0127761647021062963, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.0243125462761648592, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.2328097639601272029, g12(0), tol);
  ASSERT_NEAR(1.2328097639601272029, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.0486250925523297184, g11(1), tol);
  ASSERT_NEAR(2.0255523294042125926, g12(1), tol);
  ASSERT_NEAR(2.0255523294042125926, g21(1), tol);
  ASSERT_NEAR(4.0486250925523297184, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0849779797710245172, g12(2), tol);
  ASSERT_NEAR(-0.0849779797710245172, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.2574777992513883618, 0.2163482367061250189, 0.5260259444695116748;
  covf->set_loghyper(p);
  x1 << 0.3208898888475578692, 0.2846814291681086795;
  x2 << 0.0764900349590380557, 0.8850900550959088786;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(1.5414082912907314249, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.3655926839748677715, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.3655926839748677715, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.5414082912907314249, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3192093100935230465, g12(0), tol);
  ASSERT_NEAR(0.3192093100935230465, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(3.0828165825814628498, g11(1), tol);
  ASSERT_NEAR(2.7311853679497355429, g12(1), tol);
  ASSERT_NEAR(2.7311853679497355429, g21(1), tol);
  ASSERT_NEAR(3.0828165825814628498, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0057794594656195002, g12(2), tol);
  ASSERT_NEAR(-0.0057794594656195002, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.6662518223610213175, 0.0012701626677208422, 0.8900235966173983826;
  covf->set_loghyper(p);
  x1 << 0.4983276215842952217;
  x2 << 0.9373766488555620446;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(1.0025435546958096911, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.9775019854532993602, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.9775019854532993602, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.0025435546958096911, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0491964214056829913, g12(0), tol);
  ASSERT_NEAR(0.0491964214056829913, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.0050871093916193821, g11(1), tol);
  ASSERT_NEAR(1.9550039709065987203, g12(1), tol);
  ASSERT_NEAR(1.9550039709065987203, g21(1), tol);
  ASSERT_NEAR(2.0050871093916193821, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0001279769962268629, g12(2), tol);
  ASSERT_NEAR(-0.0001279769962268629, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.6972717299860294871, 0.7783195196275635164, 0.6524884558607202401;
  covf->set_loghyper(p);
  x1 << 0.5515838900474128170;
  x2 << 0.5173979411744824564;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(4.7428538816127661093, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.7421667899879187402, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.7421667899879187402, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.7428538816127661093, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0013740318737207990, g12(0), tol);
  ASSERT_NEAR(0.0013740318737207990, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(9.4857077632255322186, g11(1), tol);
  ASSERT_NEAR(9.4843335799758374804, g12(1), tol);
  ASSERT_NEAR(9.4843335799758374804, g21(1), tol);
  ASSERT_NEAR(9.4857077632255322186, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0000000259165090985, g12(2), tol);
  ASSERT_NEAR(-0.0000000259165090985, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovRQiso");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.5406151841667587998, 0.2736517199327712646, 0.1552284501619890511;
  covf->set_loghyper(p);
  x1 << 0.8824625046373131276, 0.1879704834105964117, 0.4358037121746298759;
  x2 << 0.3630536798704654400, 0.8810238475149584358, 0.8012425519201210600;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.7285854928357500260, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.5012665009568815222, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.5012665009568815222, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.7285854928357500260, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3987849190653620091, g12(0), tol);
  ASSERT_NEAR(0.3987849190653620091, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(3.4571709856715000520, g11(1), tol);
  ASSERT_NEAR(3.0025330019137630444, g12(1), tol);
  ASSERT_NEAR(3.0025330019137630444, g21(1), tol);
  ASSERT_NEAR(3.4571709856715000520, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(-0.0122776410049245215, g12(2), tol);
  ASSERT_NEAR(-0.0122776410049245215, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  delete covf;
}
TEST(CovTest, CovSEard) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 2;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(2);
  x1.resize(1);
  x2.resize(1);
  p << 0.5895467291919541664, 0.4067814410115261348;
  covf->set_loghyper(p);
  x1 << 0.0309439111773995856;
  x2 << 0.4323828289356907995;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(2.2559313022075975219, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.2007120115572673669, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.2007120115572673669, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.2559313022075975219, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1090757926155346280, g12(0), tol);
  ASSERT_NEAR(0.1090757926155346141, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.5118626044151950438, g11(1), tol);
  ASSERT_NEAR(4.4014240231145347337, g12(1), tol);
  ASSERT_NEAR(4.4014240231145347337, g21(1), tol);
  ASSERT_NEAR(4.5118626044151950438, g22(1), tol);
  delete covf;
  param_dim = 4;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(4);
  x1.resize(3);
  x2.resize(3);
  p << 0.8854504895236562367, 0.2267496804144789602, 0.9746799674175493644, 0.5098487021284928700;
  covf->set_loghyper(p);
  x1 << 0.8215213668277442371, 0.2036351866002784616, 0.1919309168727479920;
  x2 << 0.8898205617869300310, 0.7325038580900243845, 0.7522610623763734683;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(2.7723557339840252389, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.4795816048401069231, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.4795816048401069231, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.7723557339840252389, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0019684167502188586, g12(0), tol);
  ASSERT_NEAR(0.0019684167502188586, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.4406784558172104904, g12(1), tol);
  ASSERT_NEAR(0.4406784558172104349, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.1108332628531873421, g12(2), tol);
  ASSERT_NEAR(0.1108332628531873421, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(5.5447114679680504779, g11(3), tol);
  ASSERT_NEAR(4.9591632096802138463, g12(3), tol);
  ASSERT_NEAR(4.9591632096802138463, g21(3), tol);
  ASSERT_NEAR(5.5447114679680504779, g22(3), tol);
  delete covf;
  param_dim = 4;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(4);
  x1.resize(3);
  x2.resize(3);
  p << 0.7217830481189536629, 0.4168364651686481404, 0.9865905820680563876, 0.5390529160924792951;
  covf->set_loghyper(p);
  x1 << 0.4237073999073684982, 0.0709782222286096109, 0.8457017465310086024;
  x2 << 0.6574705380311235414, 0.3673044705051964343, 0.6997111069792270044;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(2.9391071130667385525, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.8607950653517204564, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.8607950653517204564, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.9391071130667385525, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0369067680711181872, g12(0), tol);
  ASSERT_NEAR(0.0369067680711181942, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.1091358511177459439, g12(1), tol);
  ASSERT_NEAR(0.1091358511177459439, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.0084760806201987365, g12(2), tol);
  ASSERT_NEAR(0.0084760806201987365, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(5.8782142261334771050, g11(3), tol);
  ASSERT_NEAR(5.7215901307034409129, g12(3), tol);
  ASSERT_NEAR(5.7215901307034409129, g21(3), tol);
  ASSERT_NEAR(5.8782142261334771050, g22(3), tol);
  delete covf;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.1449495117706208758, 0.3047498075676753349, 0.1119159068185215933;
  covf->set_loghyper(p);
  x1 << 0.9832056718426969155, 0.8108157099540732604;
  x2 << 0.4677653012505048613, 0.3804103250569705885;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(1.2508606240371178409, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.0768823628585229013, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.0768823628585229013, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.2508606240371178409, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2141034074345327665, g12(0), tol);
  ASSERT_NEAR(0.2141034074345327665, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.1084479475409513144, g12(1), tol);
  ASSERT_NEAR(0.1084479475409513144, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(2.5017212480742356817, g11(2), tol);
  ASSERT_NEAR(2.1537647257170458026, g12(2), tol);
  ASSERT_NEAR(2.1537647257170458026, g21(2), tol);
  ASSERT_NEAR(2.5017212480742356817, g22(2), tol);
  delete covf;
  param_dim = 5;
  input_dim = 4;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(5);
  x1.resize(4);
  x2.resize(4);
  p << 0.1047767315649310582, 0.0283932609070278730, 0.1991288768846011248, 0.2635027300783259196, 0.9873834955922452528;
  covf->set_loghyper(p);
  x1 << 0.2066417593555008869, 0.0535224132221298055, 0.0861432080337773964, 0.3580837593454457846;
  x2 << 0.8345977084326394735, 0.0290313135093165364, 0.1328124261139836948, 0.1863575005494056969;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 5);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(7.2049406435307989938, covf->get(x1, x1), tol);
  ASSERT_NEAR(6.0809304317797625572, covf->get(x2, x1), tol);
  ASSERT_NEAR(6.0809304317797625572, covf->get(x1, x2), tol);
  ASSERT_NEAR(7.2049406435307989938, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.9445561162747535544, g12(0), tol);
  ASSERT_NEAR(1.9445561162747535544, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.0034460734900206591, g12(1), tol);
  ASSERT_NEAR(0.0034460734900206591, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.0088934432722426390, g12(2), tol);
  ASSERT_NEAR(0.0088934432722426390, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(3), tol);
  ASSERT_NEAR(0.1058687752042457714, g12(3), tol);
  ASSERT_NEAR(0.1058687752042457714, g21(3), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(3), tol);
  ASSERT_NEAR(14.4098812870615979875, g11(4), tol);
  ASSERT_NEAR(12.1618608635595251144, g12(4), tol);
  ASSERT_NEAR(12.1618608635595251144, g21(4), tol);
  ASSERT_NEAR(14.4098812870615979875, g22(4), tol);
  delete covf;
  param_dim = 6;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(6);
  x1.resize(5);
  x2.resize(5);
  p << 0.9968877417581138989, 0.9505363632261348839, 0.9594115400096200341, 0.2267538404995922408, 0.2604748069781763764, 0.3836715594874952062;
  covf->set_loghyper(p);
  x1 << 0.8756221845756905209, 0.9591022795279192659, 0.6306700200805551715, 0.2786223576859876427, 0.0930163137812554108;
  x2 << 0.2022811150985873718, 0.7435767156890908947, 0.6816927285868751296, 0.5294303216012313795, 0.8374463922177391995;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 6);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(2.1540356279733163802, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.7302187347025466124, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.7302187347025466124, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.1540356279733163802, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1068281059500042623, g12(0), tol);
  ASSERT_NEAR(0.1068281059500042762, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.0120080695675537936, g12(1), tol);
  ASSERT_NEAR(0.0120080695675537936, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.0006611404865469149, g12(2), tol);
  ASSERT_NEAR(0.0006611404865469149, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(3), tol);
  ASSERT_NEAR(0.0691556666096148909, g12(3), tol);
  ASSERT_NEAR(0.0691556666096148909, g21(3), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(3), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(4), tol);
  ASSERT_NEAR(0.5695125413275666793, g12(4), tol);
  ASSERT_NEAR(0.5695125413275666793, g21(4), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(4), tol);
  ASSERT_NEAR(4.3080712559466327605, g11(5), tol);
  ASSERT_NEAR(3.4604374694050932249, g12(5), tol);
  ASSERT_NEAR(3.4604374694050932249, g21(5), tol);
  ASSERT_NEAR(4.3080712559466327605, g22(5), tol);
  delete covf;
  param_dim = 4;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(4);
  x1.resize(3);
  x2.resize(3);
  p << 0.3223737589122138703, 0.5872553653938700213, 0.6395430548388284508, 0.0174872892503900035;
  covf->set_loghyper(p);
  x1 << 0.0367376126398826219, 0.0551374561532074203, 0.0639835847659775414;
  x2 << 0.0713733824009400442, 0.9647753329926174182, 0.0831562516059666246;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.0355933821286369412, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.9109943063985571632, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.9109943063985571632, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.0355933821286369412, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0005735285761395553, g12(0), tol);
  ASSERT_NEAR(0.0005735285761395553, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.2328998479881883299, g12(1), tol);
  ASSERT_NEAR(0.2328998479881883299, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.0000931924382809122, g12(2), tol);
  ASSERT_NEAR(0.0000931924382809122, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(2.0711867642572738824, g11(3), tol);
  ASSERT_NEAR(1.8219886127971143264, g12(3), tol);
  ASSERT_NEAR(1.8219886127971143264, g21(3), tol);
  ASSERT_NEAR(2.0711867642572738824, g22(3), tol);
  delete covf;
  param_dim = 4;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(4);
  x1.resize(3);
  x2.resize(3);
  p << 0.9561955480047493738, 0.5086359112092331269, 0.2103084221309609037, 0.9984529828882959812;
  covf->set_loghyper(p);
  x1 << 0.9699106057365184386, 0.6731481705711320762, 0.0765055983598169620;
  x2 << 0.2116934759506674535, 0.0457577485728924982, 0.5057104469735763663;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 4);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(7.3662294379271093803, covf->get(x1, x1), tol);
  ASSERT_NEAR(6.1891506391347013150, covf->get(x2, x1), tol);
  ASSERT_NEAR(6.1891506391347013150, covf->get(x1, x2), tol);
  ASSERT_NEAR(7.3662294379271093803, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.5256266019057413974, g12(0), tol);
  ASSERT_NEAR(0.5256266019057413974, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.8808689115452913443, g12(1), tol);
  ASSERT_NEAR(0.8808689115452913443, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.7486670466278754210, g12(2), tol);
  ASSERT_NEAR(0.7486670466278754210, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(14.7324588758542187605, g11(3), tol);
  ASSERT_NEAR(12.3783012782694026299, g12(3), tol);
  ASSERT_NEAR(12.3783012782694026299, g21(3), tol);
  ASSERT_NEAR(14.7324588758542187605, g22(3), tol);
  delete covf;
  param_dim = 6;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(6);
  x1.resize(5);
  x2.resize(5);
  p << 0.5775611266733388094, 0.4394463117525742035, 0.6020040903966491497, 0.2145464404015058335, 0.6725668705781866485, 0.3238579752509559428;
  covf->set_loghyper(p);
  x1 << 0.6341428060560693192, 0.3555807122755705318, 0.1525820222880850396, 0.0844857004743876372, 0.7387994826563231143;
  x2 << 0.8374130060961150201, 0.3674740255799573418, 0.1270480875495496598, 0.0733284011407931979, 0.8922173333733336431;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 6);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(1.9111706317181895720, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.8926432671693071974, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.8926432671693071974, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.9111706317181895720, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0246350230361901609, g12(0), tol);
  ASSERT_NEAR(0.0246350230361901609, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.0001111670975338270, g12(1), tol);
  ASSERT_NEAR(0.0001111670975338270, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(2), tol);
  ASSERT_NEAR(0.0003701776066092624, g12(2), tol);
  ASSERT_NEAR(0.0003701776066092624, g21(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(3), tol);
  ASSERT_NEAR(0.0001534031449266434, g12(3), tol);
  ASSERT_NEAR(0.0001534031449266434, g21(3), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(3), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(4), tol);
  ASSERT_NEAR(0.0116047661009727205, g12(4), tol);
  ASSERT_NEAR(0.0116047661009727205, g21(4), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(4), tol);
  ASSERT_NEAR(3.8223412634363791440, g11(5), tol);
  ASSERT_NEAR(3.7852865343386143948, g12(5), tol);
  ASSERT_NEAR(3.7852865343386143948, g21(5), tol);
  ASSERT_NEAR(3.8223412634363791440, g22(5), tol);
  delete covf;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovSEard");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.7672000902735781613, 0.4870615382274344762, 0.7964278055701294878;
  covf->set_loghyper(p);
  x1 << 0.3086046162358565548, 0.5085934272003239665;
  x2 << 0.8071224983754773374, 0.7503131215425523637;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(4.9177721412875881057, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.7352663326592887572, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.7352663326592887572, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.9177721412875881057, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2537022751629471884, g12(0), tol);
  ASSERT_NEAR(0.2537022751629471884, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(1), tol);
  ASSERT_NEAR(0.1044509048789223765, g12(1), tol);
  ASSERT_NEAR(0.1044509048789223765, g21(1), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(1), tol);
  ASSERT_NEAR(9.8355442825751762115, g11(2), tol);
  ASSERT_NEAR(9.4705326653185775143, g12(2), tol);
  ASSERT_NEAR(9.4705326653185775143, g21(2), tol);
  ASSERT_NEAR(9.8355442825751762115, g22(2), tol);
  delete covf;
}
TEST(CovTest, CovSEiso) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.5532951862614349237, 0.7956425196534792077;
  covf->set_loghyper(p);
  x1 << 0.9498605081606258382, 0.7458375002009774990, 0.0619829910361802128, 0.1903515904173533890, 0.7464506275492458487;
  x2 << 0.1092247310513924097, 0.9767385037760626387, 0.7733255415970879953, 0.9942990100587661972, 0.3172719497025578983;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(4.9100544890299442358, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.4716917619604541478, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.4716917619604541478, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.9100544890299442358, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(2.4068754662943248057, g12(0), tol);
  ASSERT_NEAR(2.4068754662943248057, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(9.8201089780598884715, g11(1), tol);
  ASSERT_NEAR(6.9433835239209082957, g12(1), tol);
  ASSERT_NEAR(6.9433835239209082957, g21(1), tol);
  ASSERT_NEAR(9.8201089780598884715, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.8155204404785364458, 0.4154119017113494516;
  covf->set_loghyper(p);
  x1 << 0.4466484789168735370, 0.5761769522324694526, 0.7626754845994017096, 0.6189399269699472628;
  x2 << 0.3147827120398125622, 0.8015943432140021363, 0.7632271724637093024, 0.2457346523048981046;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(2.2952087624882517858, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.2490745433650825014, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.2490745433650825014, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.2952087624882517858, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0913348536884298623, g12(0), tol);
  ASSERT_NEAR(0.0913348536884298762, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.5904175249765035716, g11(1), tol);
  ASSERT_NEAR(4.4981490867301650027, g12(1), tol);
  ASSERT_NEAR(4.4981490867301650027, g21(1), tol);
  ASSERT_NEAR(4.5904175249765035716, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.1470193008939646440, 0.1296986654580253306;
  covf->set_loghyper(p);
  x1 << 0.6606546168749521941, 0.0732312040468012793, 0.2015641396781145955;
  x2 << 0.8507472555183067664, 0.5957954736035318000, 0.6773121927395872044;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.2961487024801907619, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.0616672456619296039, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.0616672456619296039, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.2961487024801907619, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4237258049837943630, g12(0), tol);
  ASSERT_NEAR(0.4237258049837943630, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.5922974049603815239, g11(1), tol);
  ASSERT_NEAR(2.1233344913238592078, g12(1), tol);
  ASSERT_NEAR(2.1233344913238592078, g21(1), tol);
  ASSERT_NEAR(2.5922974049603815239, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.8054418769399711575, 0.7510570440625297106;
  covf->set_loghyper(p);
  x1 << 0.7984396698441528217, 0.2738732738207980688, 0.4128739207492142516, 0.2734224802869231752, 0.2148543395389035382;
  x2 << 0.2846108623793905945, 0.6845351630021280220, 0.4347606422400720483, 0.5597620707569854748, 0.2007315387508085136;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(4.4911737782034544253, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.2659092021818629803, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.2659092021818629803, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.4911737782034544253, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4390367305075542625, g12(0), tol);
  ASSERT_NEAR(0.4390367305075542070, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(8.9823475564069088506, g11(1), tol);
  ASSERT_NEAR(8.5318184043637259606, g12(1), tol);
  ASSERT_NEAR(8.5318184043637259606, g21(1), tol);
  ASSERT_NEAR(8.9823475564069088506, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.7886952949255692236, 0.0614295506428290672;
  covf->set_loghyper(p);
  x1 << 0.9889842675202852318, 0.6215338324023668148, 0.9743834099036321472, 0.8546796997919561267;
  x2 << 0.0393484636694887424, 0.4454757891180092244, 0.3232157705635460010, 0.1549596694827686250;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(1.1307250920113933734, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.9344499065137206184, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.9344499065137206184, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.1307250920113933734, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3563176344270487794, g12(0), tol);
  ASSERT_NEAR(0.3563176344270487794, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.2614501840227867469, g11(1), tol);
  ASSERT_NEAR(1.8688998130274412368, g12(1), tol);
  ASSERT_NEAR(1.8688998130274412368, g21(1), tol);
  ASSERT_NEAR(2.2614501840227867469, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.3521357424183615414, 0.3997986115573747279;
  covf->set_loghyper(p);
  x1 << 0.9111254085824103122, 0.3981781234401112757, 0.4749331243772964006, 0.8941209543406711813, 0.6875104876187109193;
  x2 << 0.6599926122215520330, 0.7747428881839223402, 0.8085497647028000445, 0.3179686311439052782, 0.0095455321568005402;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(2.2246447125489408059, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.6916793267011036583, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.6916793267011036583, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.2246447125489408059, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.9266190534319159733, g12(0), tol);
  ASSERT_NEAR(0.9266190534319159733, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.4492894250978816117, g11(1), tol);
  ASSERT_NEAR(3.3833586534022073167, g12(1), tol);
  ASSERT_NEAR(3.3833586534022073167, g21(1), tol);
  ASSERT_NEAR(4.4492894250978816117, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(5);
  x2.resize(5);
  p << 0.0975259847458207485, 0.8643178999531035966;
  covf->set_loghyper(p);
  x1 << 0.9577973528606315012, 0.8650140563068283717, 0.6738974207789208970, 0.5561639937493888519, 0.4513543894173818183;
  x2 << 0.3299427728726379572, 0.0879311718179626167, 0.3315765009296787191, 0.8479559710934920780, 0.0816064543213874671;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(5.6329641741980456260, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.2496871638825255424, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.2496871638825255424, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.6329641741980456260, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(3.5751567575723344206, g12(0), tol);
  ASSERT_NEAR(3.5751567575723344206, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(11.2659283483960912520, g11(1), tol);
  ASSERT_NEAR(6.4993743277650510848, g12(1), tol);
  ASSERT_NEAR(6.4993743277650510848, g21(1), tol);
  ASSERT_NEAR(11.2659283483960912520, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(1);
  x2.resize(1);
  p << 0.2872791377374039890, 0.8280238614780860429;
  covf->set_loghyper(p);
  x1 << 0.5547921648156768359;
  x2 << 0.3203728492041997278;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(5.2385656133845071025, covf->get(x1, x1), tol);
  ASSERT_NEAR(5.1581598416813063679, covf->get(x2, x1), tol);
  ASSERT_NEAR(5.1581598416813063679, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.2385656133845071025, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1595710470647948021, g12(0), tol);
  ASSERT_NEAR(0.1595710470647948021, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(10.4771312267690142050, g11(1), tol);
  ASSERT_NEAR(10.3163196833626127358, g12(1), tol);
  ASSERT_NEAR(10.3163196833626127358, g21(1), tol);
  ASSERT_NEAR(10.4771312267690142050, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 4;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(4);
  x2.resize(4);
  p << 0.8774204163118646260, 0.5708176847127128806;
  covf->set_loghyper(p);
  x1 << 0.5594812124649334306, 0.7107029121700384477, 0.3321263893656868360, 0.9376764560376819047;
  x2 << 0.1174703380494654947, 0.7942181445775912119, 0.3299189421593954341, 0.1145770343685321713;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(3.1318859700176484573, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.9024563446491296048, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.9024563446491296048, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.1318859700176484573, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4416260056570893711, g12(0), tol);
  ASSERT_NEAR(0.4416260056570893711, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(6.2637719400352969146, g11(1), tol);
  ASSERT_NEAR(5.8049126892982592096, g12(1), tol);
  ASSERT_NEAR(5.8049126892982592096, g21(1), tol);
  ASSERT_NEAR(6.2637719400352969146, g22(1), tol);
  delete covf;
  param_dim = 2;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSEiso");
  p.resize(2);
  x1.resize(3);
  x2.resize(3);
  p << 0.6507438813770730635, 0.6131141474763590615;
  covf->set_loghyper(p);
  x1 << 0.7518770941103902761, 0.1626245135875453718, 0.7730116796117310063;
  x2 << 0.7714510957722446882, 0.8546479880558696118, 0.5426954237769736622;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 2);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(3.4083499718073837492, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.1702116808069842335, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.1702116808069842335, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.4083499718073837492, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.4592364393567731073, g12(0), tol);
  ASSERT_NEAR(0.4592364393567729963, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(6.8166999436147674984, g11(1), tol);
  ASSERT_NEAR(6.3404233616139684671, g12(1), tol);
  ASSERT_NEAR(6.3404233616139684671, g21(1), tol);
  ASSERT_NEAR(6.8166999436147674984, g22(1), tol);
  delete covf;
}
TEST(CovTest, CovNoise) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 1;
  input_dim = 3;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(3);
  x2.resize(3);
  p << 0.2631339850771778899;
  covf->set_loghyper(p);
  x1 << 0.4957465854777884928, 0.9914209851550856989, 0.1345653888129725306;
  x2 << 0.3306733092961063880, 0.0151319757274821498, 0.8103500142622612756;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(1.6926036592367201816, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.6926036592367201816, covf->get(x2, x2), tol);
  ASSERT_NEAR(3.3852073184734403632, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(3.3852073184734403632, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 4;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(4);
  x2.resize(4);
  p << 0.8010172828922926813;
  covf->set_loghyper(p);
  x1 << 0.4001567861121047009, 0.8193520690837926557, 0.6921750643764815747, 0.9153412530276758829;
  x2 << 0.6415351043934205411, 0.6612774622220284337, 0.0134599549993701384, 0.8636053098959097785;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(4.9631199530863527869, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.9631199530863527869, covf->get(x2, x2), tol);
  ASSERT_NEAR(9.9262399061727055738, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(9.9262399061727055738, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.2646712545191143295;
  covf->set_loghyper(p);
  x1 << 0.1811766394899820831;
  x2 << 0.5397119769903906406;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(1.6978156431199362686, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.6978156431199362686, covf->get(x2, x2), tol);
  ASSERT_NEAR(3.3956312862398725372, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(3.3956312862398725372, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 3;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(3);
  x2.resize(3);
  p << 0.7008669684923153342;
  covf->set_loghyper(p);
  x1 << 0.7845748384684951837, 0.2555235554052383007, 0.9151222732541571814;
  x2 << 0.3275909898336032411, 0.1765650561172453781, 0.2289054699227159873;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(4.0622375276274969025, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.0622375276274969025, covf->get(x2, x2), tol);
  ASSERT_NEAR(8.1244750552549938050, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(8.1244750552549938050, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.5747466700713480536;
  covf->set_loghyper(p);
  x1 << 0.6421843281551720128;
  x2 << 0.2490308942790874225;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(3.1565931854130644396, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.1565931854130644396, covf->get(x2, x2), tol);
  ASSERT_NEAR(6.3131863708261288792, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(6.3131863708261288792, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 3;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(3);
  x2.resize(3);
  p << 0.3606862847703888875;
  covf->set_loghyper(p);
  x1 << 0.7195824292662342803, 0.3355740519130886446, 0.4780184978723613920;
  x2 << 0.2238350224566443281, 0.4244213595641270764, 0.6217954888779181344;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(2.0572549991998827501, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.0572549991998827501, covf->get(x2, x2), tol);
  ASSERT_NEAR(4.1145099983997655002, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(4.1145099983997655002, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.1491593921653371346;
  covf->set_loghyper(p);
  x1 << 0.1495302127330508934;
  x2 << 0.0887736272517700709;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(1.3475913104073014015, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(1.3475913104073014015, covf->get(x2, x2), tol);
  ASSERT_NEAR(2.6951826208146028030, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(2.6951826208146028030, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 4;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(4);
  x2.resize(4);
  p << 0.5528668217738870183;
  covf->set_loghyper(p);
  x1 << 0.8058988847395373023, 0.4000185951366268533, 0.5739458341724213986, 0.2716635118544096228;
  x2 << 0.6065008040879766860, 0.9130914589617420418, 0.5718144207587826378, 0.9852310622508819726;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(3.0214403160790301861, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.0214403160790301861, covf->get(x2, x2), tol);
  ASSERT_NEAR(6.0428806321580603722, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(6.0428806321580603722, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 1;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(1);
  x2.resize(1);
  p << 0.4608419682147042451;
  covf->set_loghyper(p);
  x1 << 0.5038930857363574933;
  x2 << 0.7141614632449500011;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(2.5135194351581935379, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.5135194351581935379, covf->get(x2, x2), tol);
  ASSERT_NEAR(5.0270388703163870758, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(5.0270388703163870758, g22(0), tol);
  delete covf;
  param_dim = 1;
  input_dim = 4;
  covf = factory.create(input_dim, "CovNoise");
  p.resize(1);
  x1.resize(4);
  x2.resize(4);
  p << 0.9926924739022235933;
  covf->set_loghyper(p);
  x1 << 0.2688037189975180929, 0.5511047805666466903, 0.0590946811562259589, 0.2515108807728586582;
  x2 << 0.5381841333085323198, 0.4876998748715024590, 0.3044098804573356354, 0.1409108550098974177;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 1);
  ASSERT_EQ(covf->get_input_dim(), 4);
  ASSERT_NEAR(7.2818499781542547211, covf->get(x1, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x2, x1), tol);
  ASSERT_NEAR(0.0000000000000000000, covf->get(x1, x2), tol);
  ASSERT_NEAR(7.2818499781542547211, covf->get(x2, x2), tol);
  ASSERT_NEAR(14.5636999563085094422, g11(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(0), tol);
  ASSERT_NEAR(14.5636999563085094422, g22(0), tol);
  delete covf;
}
TEST(CovTest, CovSum) {
  int param_dim, input_dim;
  Eigen::VectorXd p, x1, x2, g11, g12, g21, g22;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.8390387337264169076, 0.6299676329455857759, 0.2460264679744748051;
  covf->set_loghyper(p);
  x1 << 0.4785140393476876586, 0.9931128341452196695;
  x2 << 0.7265875301116164753, 0.0291709890971829644;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(5.1608639824279878283, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.2137387691344825313, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.2137387691344825313, covf->get(x1, x2), tol);
  ASSERT_NEAR(5.1608639824279878283, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.5945434779534544134, g12(0), tol);
  ASSERT_NEAR(0.5945434779534543024, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(7.0503865594672827655, g11(1), tol);
  ASSERT_NEAR(6.4274775382689650627, g12(1), tol);
  ASSERT_NEAR(6.4274775382689650627, g21(1), tol);
  ASSERT_NEAR(7.0503865594672827655, g22(1), tol);
  ASSERT_NEAR(3.2713414053886928912, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(3.2713414053886928912, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.6387154084097077522, 0.3781506796852132091, 0.2550884996305432528;
  covf->set_loghyper(p);
  x1 << 0.5582865355898573023, 0.7547243098687607121, 0.0964286703668720824;
  x2 << 0.4171466432179752326, 0.4968414201961316445, 0.8584555764328757332;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(3.7959680892673444141, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.9412307602554486063, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.9412307602554486063, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.7959680892673444141, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3609880689402706899, g12(0), tol);
  ASSERT_NEAR(0.3609880689402706899, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(4.2607642258463673812, g11(1), tol);
  ASSERT_NEAR(3.8824615205108972127, g12(1), tol);
  ASSERT_NEAR(3.8824615205108972127, g21(1), tol);
  ASSERT_NEAR(4.2607642258463673812, g22(1), tol);
  ASSERT_NEAR(3.3311719526883214471, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(3.3311719526883214471, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.6395094606296928275, 0.0583901331581727634, 0.4850908886104197126;
  covf->set_loghyper(p);
  x1 << 0.1289341471117785298, 0.6727378506697739846, 0.7670175159686820621;
  x2 << 0.1230549015228880050, 0.7181372885498453762, 0.6833787158852023813;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(3.7622964710753521445, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.1224515645544979048, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.1224515645544979048, covf->get(x1, x2), tol);
  ASSERT_NEAR(3.7622964710753521445, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0028399735882283033, g12(0), tol);
  ASSERT_NEAR(0.0028399735882283033, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.2477448998465283658, g11(1), tol);
  ASSERT_NEAR(2.2449031291089958096, g12(1), tol);
  ASSERT_NEAR(2.2449031291089958096, g21(1), tol);
  ASSERT_NEAR(2.2477448998465283658, g22(1), tol);
  ASSERT_NEAR(5.2768480423041754790, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(5.2768480423041754790, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.9299695234317915116, 0.5313127031942727063, 0.2033649672650124085;
  covf->set_loghyper(p);
  x1 << 0.5702121766061829522;
  x2 << 0.6893044559080657718;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(4.3958572823216499614, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.8907656241706480849, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.8907656241706480849, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.3958572823216499614, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0063829116255218286, g12(0), tol);
  ASSERT_NEAR(0.0063829116255218286, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(5.7879176846868567452, g11(1), tol);
  ASSERT_NEAR(5.7815312483412961697, g12(1), tol);
  ASSERT_NEAR(5.7815312483412961697, g21(1), tol);
  ASSERT_NEAR(5.7879176846868567452, g22(1), tol);
  ASSERT_NEAR(3.0037968799564431777, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(3.0037968799564431777, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 2;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(2);
  x2.resize(2);
  p << 0.4341310090386379938, 0.7813903307836236323, 0.9233498734657469287;
  covf->set_loghyper(p);
  x1 << 0.3940399459439267726, 0.3900186098462322670;
  x2 << 0.6660839495780151998, 0.9546503352931110520;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 2);
  ASSERT_NEAR(11.1109374365009490049, covf->get(x1, x1), tol);
  ASSERT_NEAR(4.3944918154672265587, covf->get(x2, x1), tol);
  ASSERT_NEAR(4.3944918154672265587, covf->get(x1, x2), tol);
  ASSERT_NEAR(11.1109374365009490049, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.7244650662641655137, g12(0), tol);
  ASSERT_NEAR(0.7244650662641655137, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(9.5441446626689234733, g11(1), tol);
  ASSERT_NEAR(8.7889836309344531173, g12(1), tol);
  ASSERT_NEAR(8.7889836309344531173, g21(1), tol);
  ASSERT_NEAR(9.5441446626689234733, g22(1), tol);
  ASSERT_NEAR(12.6777302103329745364, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(12.6777302103329745364, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 5;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(5);
  x2.resize(5);
  p << 0.3684039185627290269, 0.5629019592631560043, 0.8003914887514793630;
  covf->set_loghyper(p);
  x1 << 0.8983173941145178309, 0.9242898563518759936, 0.4130897456770584730, 0.2032649220913453902, 0.2000315117707551771;
  x2 << 0.0027593989950867037, 0.9835506689594246676, 0.9204718458645494428, 0.7761182690332230072, 0.7943332044462843022;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 5);
  ASSERT_NEAR(8.0396061439124508752, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.0306417624098433983, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.0306417624098433983, covf->get(x1, x2), tol);
  ASSERT_NEAR(8.0396061439124508752, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(1.6953910774922271720, g12(0), tol);
  ASSERT_NEAR(1.6953910774922271720, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(6.1653881758473669805, g11(1), tol);
  ASSERT_NEAR(4.0612835248196867965, g12(1), tol);
  ASSERT_NEAR(4.0612835248196867965, g21(1), tol);
  ASSERT_NEAR(6.1653881758473669805, g22(1), tol);
  ASSERT_NEAR(9.9138241119775365462, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(9.9138241119775365462, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 3;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(3);
  x2.resize(3);
  p << 0.7114173594743402607, 0.0626128443050598671, 0.0616486479001857601;
  covf->set_loghyper(p);
  x1 << 0.6063792412214635830, 0.2468121249858507005, 0.0018363261403356868;
  x2 << 0.7661920556638742719, 0.4254309046704108921, 0.9895637722765665556;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 3);
  ASSERT_NEAR(2.2646248987450734447, covf->get(x1, x1), tol);
  ASSERT_NEAR(1.0007280005818461888, covf->get(x2, x1), tol);
  ASSERT_NEAR(1.0007280005818461888, covf->get(x1, x2), tol);
  ASSERT_NEAR(2.2646248987450734447, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.2491771749486037246, g12(0), tol);
  ASSERT_NEAR(0.2491771749486036969, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(2.2668084412541706918, g11(1), tol);
  ASSERT_NEAR(2.0014560011636923775, g12(1), tol);
  ASSERT_NEAR(2.0014560011636923775, g21(1), tol);
  ASSERT_NEAR(2.2668084412541706918, g22(1), tol);
  ASSERT_NEAR(2.2624413562359766416, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(2.2624413562359766416, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.1245078072796584889, 0.9684148198513435890, 0.8772232371629496983;
  covf->set_loghyper(p);
  x1 << 0.2403686230688504288;
  x2 << 0.5159204007823045002;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(12.7169714987377702187, covf->get(x1, x1), tol);
  ASSERT_NEAR(6.7344343710783780566, covf->get(x2, x1), tol);
  ASSERT_NEAR(6.7344343710783780566, covf->get(x1, x2), tol);
  ASSERT_NEAR(12.7169714987377702187, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.3986221727990843511, g12(0), tol);
  ASSERT_NEAR(0.3986221727990843511, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(13.8734483155144374678, g11(1), tol);
  ASSERT_NEAR(13.4688687421567561131, g12(1), tol);
  ASSERT_NEAR(13.4688687421567561131, g21(1), tol);
  ASSERT_NEAR(13.8734483155144374678, g22(1), tol);
  ASSERT_NEAR(11.5604946819611011932, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(11.5604946819611011932, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.6356006985865446657, 0.6162063555184806862, 0.6794562505858459112;
  covf->set_loghyper(p);
  x1 << 0.8396026322840213219;
  x2 << 0.7686849328366512912;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(7.3214524395856823702, covf->get(x1, x1), tol);
  ASSERT_NEAR(3.4270758060703565562, covf->get(x2, x1), tol);
  ASSERT_NEAR(3.4270758060703565562, covf->get(x1, x2), tol);
  ASSERT_NEAR(7.3214524395856823702, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.0048345631377853431, g12(0), tol);
  ASSERT_NEAR(0.0048345631377853431, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(6.8589878807045225884, g11(1), tol);
  ASSERT_NEAR(6.8541516121407131124, g12(1), tol);
  ASSERT_NEAR(6.8541516121407131124, g21(1), tol);
  ASSERT_NEAR(6.8589878807045225884, g22(1), tol);
  ASSERT_NEAR(7.7839169984668421520, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(7.7839169984668421520, g22(2), tol);
  delete covf;
  param_dim = 3;
  input_dim = 1;
  covf = factory.create(input_dim, "CovSum(CovSEiso, CovNoise)");
  p.resize(3);
  x1.resize(1);
  x2.resize(1);
  p << 0.0819871031421397500, 0.5430171697879898618, 0.3221197025958089100;
  covf->set_loghyper(p);
  x1 << 0.2443833996832005528;
  x2 << 0.0223264534754620270;
  g11.resize(param_dim);
  g12.resize(param_dim);
  g21.resize(param_dim);
  g22.resize(param_dim);
  covf->grad(x1, x1, g11);
  covf->grad(x1, x2, g12);
  covf->grad(x2, x1, g21);
  covf->grad(x2, x2, g22);
  ASSERT_EQ(covf->get_param_dim(), 3);
  ASSERT_EQ(covf->get_input_dim(), 1);
  ASSERT_NEAR(4.8670403647072841835, covf->get(x1, x1), tol);
  ASSERT_NEAR(2.9011533583393549485, covf->get(x2, x1), tol);
  ASSERT_NEAR(2.9011533583393549485, covf->get(x1, x2), tol);
  ASSERT_NEAR(4.8670403647072841835, covf->get(x2, x2), tol);
  ASSERT_NEAR(0.0000000000000000000, g11(0), tol);
  ASSERT_NEAR(0.1214189071745332693, g12(0), tol);
  ASSERT_NEAR(0.1214189071745332693, g21(0), tol);
  ASSERT_NEAR(0.0000000000000000000, g22(0), tol);
  ASSERT_NEAR(5.9250049362068324399, g11(1), tol);
  ASSERT_NEAR(5.8023067166787098969, g12(1), tol);
  ASSERT_NEAR(5.8023067166787098969, g21(1), tol);
  ASSERT_NEAR(5.9250049362068324399, g22(1), tol);
  ASSERT_NEAR(3.8090757932077350389, g11(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g12(2), tol);
  ASSERT_NEAR(0.0000000000000000000, g21(2), tol);
  ASSERT_NEAR(3.8090757932077350389, g22(2), tol);
  delete covf;
}
